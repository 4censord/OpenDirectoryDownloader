name: CI

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build_and_zip:
    strategy:
      fail-fast: true
      matrix:
        config:
          - {os: ubuntu-latest, assetname: 'OpenDirectoryDownloader-ubuntu.zip'}
          - {os: windows-latest, assetname: 'OpenDirectoryDownloader-windows.zip'}
          - {os: macOS-latest, assetname: 'OpenDirectoryDownloader-macos.zip'}

    runs-on: ${{ matrix.config.os }}
    name: Build and zip ${{ matrix.config.os }}

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1

    - name: Build with dotnet
      run: dotnet build OpenDirectoryDownloader --configuration Release

    - name: Test with dotnet
      run: dotnet test OpenDirectoryDownloader --configuration Release

    - name: Publish with dotnet
      run: dotnet publish OpenDirectoryDownloader --configuration Release -o ./artifacts

    - name: Zipping
      uses: papeloto/action-zip@v1
      with:
        files: ./artifacts
        dest: ${{ matrix.config.assetname }}

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ matrix.config.assetname }}
        path: ${{ matrix.config.assetname }}

  release:
    needs: [build_and_zip]
    runs-on: ubuntu-latest
    name: Release

    steps:
    - name: Download artifact 1/3
      uses: actions/download-artifact@v1.0.0
      with:
        name: OpenDirectoryDownloader-ubuntu.zip
        path: ./artifacts/OpenDirectoryDownloader-ununtu.zip

    - name: Download artifact 2/3
      uses: actions/download-artifact@v1.0.0
      with:
        name: OpenDirectoryDownloader-windows.zip
        path: ./artifacts/OpenDirectoryDownloader-windows.zip

    - name: Download artifact 3/3
      uses: actions/download-artifact@v1.0.0
      with:
        name: OpenDirectoryDownloader-macos.zip
        path: ./artifacts/OpenDirectoryDownloader-macos.zip

    - name: Create release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: OpenDirectoryDownloader ${{ github.ref }}
        body: ${{ github.event.commits[0].message }}
        draft: true
        prerelease: false
        allowUpdates: true

    - name: Upload Release Asset 1/3
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/OpenDirectoryDownloader-ubuntu.zip
        asset_name: OpenDirectoryDownloader-ubuntu.zip
        asset_content_type: application/zip

    - name: Upload Release Asset 2/3
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/OpenDirectoryDownloader-windows.zip
        asset_name: OpenDirectoryDownloader-windows.zip
        asset_content_type: application/zip

    - name: Upload Release Asset 3/3
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/OpenDirectoryDownloader-macos.zip
        asset_name: OpenDirectoryDownloader-macos.zip
        asset_content_type: application/zip
